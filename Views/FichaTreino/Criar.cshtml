@model gymnasium_academia.Models.Treinos.FichaTreino

@{
    ViewData["Title"] = "Criar Ficha de Treino";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<h1>Criar Ficha de Treino</h1>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Nome" class="control-label"></label>
        <input asp-for="Nome" class="form-control" />
        <span asp-validation-for="Nome" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Descricao" class="control-label"></label>
        <textarea asp-for="Descricao" class="form-control"></textarea>
        <span asp-validation-for="Descricao" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="Categoria">Categoria do Treino</label>
        <select asp-for="Categoria" class="form-control">
            <option value="1">Hipertrofia</option>
            <option value="2">Condicionamento</option>
            <option value="3">Perda de Peso</option>
            <option value="4">Manutenção</option>
        </select>
    </div>

    <div class="form-group">
        <label>Dias da Semana</label>
        <div>
            @foreach (DayOfWeek dia in Enum.GetValues(typeof(DayOfWeek)))
            {
                <div class="form-check form-check-inline">
                    <input type="checkbox" name="DiasTreino" value="@dia" class="form-check-input" />
                    <label class="form-check-label">@dia</label>
                </div>
            }
        </div>
    </div>

    <div class="form-group">
        <label>Exercícios</label>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Nome</th>
                    <th>Séries</th>
                    <th>Repetições</th>
                    <th>Grupo Muscular</th>
                    <th>Ação</th>
                </tr>
            </thead>
            <tbody id="exercicio-rows">
                <tr>
                    <td><input type="text" name="Exercicios[0].Nome" class="form-control" required /></td>
                    <td><input type="number" name="Exercicios[0].Series" class="form-control" required /></td>
                    <td><input type="text" name="Exercicios[0].Repeticoes" class="form-control" required /></td>
                    <td><input type="text" name="Exercicios[0].GrupoMuscular" class="form-control" required /></td>
                    <td><button type="button" class="btn btn-danger" onclick="removeExercicioRow(this)">Remover</button></td>
                </tr>
            </tbody>
        </table>
        <button type="button" class="btn btn-secondary" onclick="addExercicioRow()">Adicionar Exercício</button>
    </div>

    @if (User.IsInRole("Admin"))
    {
        <div class="form-group">
            <label for="IsPublica">Ficha Pública?</label>
            <input type="checkbox" asp-for="IsPublica" />
        </div>
        <div class="form-group">
            <label for="AlunoEmail">Email do Aluno (apenas para fichas privadas)</label>
            <input type="email" id="AlunoEmail" name="alunoEmail" class="form-control" />
            <div id="emailResults" class="mt-2"></div> <!-- Aqui serão exibidos os resultados da pesquisa -->
        </div>
    }
    else if (User.IsInRole("Personal"))
    {
        <div class="form-group">
            <label for="AlunoEmail">Email do Aluno</label>
            <input type="email" id="AlunoEmail" name="alunoEmail" class="form-control" required />
        </div>
    }

    <button type="submit" class="btn btn-primary">Salvar Ficha</button>
</form>

@section Scripts {
    <script>
        let exercicioCount = 1;

        // Função para adicionar novas linhas de exercício
        function addExercicioRow() {
            let tableBody = document.getElementById("exercicio-rows");
            let row = document.createElement("tr");
            row.innerHTML = `
                        <td><input type="text" name="Exercicios[${exercicioCount}].Nome" class="form-control" required /></td>
                        <td><input type="number" name="Exercicios[${exercicioCount}].Series" class="form-control" required /></td>
                        <td><input type="text" name="Exercicios[${exercicioCount}].Repeticoes" class="form-control" required /></td>
                        <td><input type="text" name="Exercicios[${exercicioCount}].GrupoMuscular" class="form-control" required /></td>
                        <td><button type="button" class="btn btn-danger" onclick="removeExercicioRow(this)">Remover</button></td>
                    `;
            tableBody.appendChild(row);
            exercicioCount++;
        }

        // Função para remover uma linha de exercício
        function removeExercicioRow(button) {
            button.closest("tr").remove();
        }

        // Função de busca de emails com 3 ou mais caracteres
        $(document).ready(function () {
            $('#AlunoEmail').on('input', function () {
                var query = $(this).val();

                if (query.length >= 3) {
                    $.ajax({
                        url: '@Url.Action("BuscarAlunosPorEmail", "Account")', // Método no controller para buscar emails
                        type: 'GET',
                        data: { email: query },
                        success: function (data) {
                            $('#emailResults').html(data);
                        }
                    });
                } else {
                    $('#emailResults').empty(); // Limpa a lista se a pesquisa for menor que 3 caracteres
                }
            });
        });

        // Função para selecionar o email ao clicar em um resultado
        function selectEmail(email) {
            $('#AlunoEmail').val(email);
            $('#emailResults').empty();
        }
    </script>
}
